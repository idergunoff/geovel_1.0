# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'regressor_form.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_RegressorForm(object):
    def setupUi(self, RegressorForm):
        RegressorForm.setObjectName("RegressorForm")
        RegressorForm.resize(930, 580)
        self.gridLayout_18 = QtWidgets.QGridLayout(RegressorForm)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout_27 = QtWidgets.QGridLayout()
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.groupBox = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox.setStyleSheet("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.gridLayout_19 = QtWidgets.QGridLayout()
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.radioButton_mlp = QtWidgets.QRadioButton(self.groupBox)
        self.radioButton_mlp.setStyleSheet("background-color: rgb(252, 226, 251);")
        self.radioButton_mlp.setObjectName("radioButton_mlp")
        self.buttonGroup = QtWidgets.QButtonGroup(RegressorForm)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.radioButton_mlp)
        self.gridLayout_19.addWidget(self.radioButton_mlp, 0, 0, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.groupBox)
        self.label_36.setObjectName("label_36")
        self.gridLayout_19.addWidget(self.label_36, 0, 1, 1, 1)
        self.label_38 = QtWidgets.QLabel(self.groupBox)
        self.label_38.setObjectName("label_38")
        self.gridLayout_19.addWidget(self.label_38, 0, 2, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.groupBox)
        self.label_42.setObjectName("label_42")
        self.gridLayout_19.addWidget(self.label_42, 0, 3, 1, 1)
        self.label_43 = QtWidgets.QLabel(self.groupBox)
        self.label_43.setObjectName("label_43")
        self.gridLayout_19.addWidget(self.label_43, 0, 4, 1, 1)
        self.label_44 = QtWidgets.QLabel(self.groupBox)
        self.label_44.setObjectName("label_44")
        self.gridLayout_19.addWidget(self.label_44, 0, 5, 1, 1)
        self.checkBox_e_stop_mlp = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_e_stop_mlp.setChecked(True)
        self.checkBox_e_stop_mlp.setObjectName("checkBox_e_stop_mlp")
        self.gridLayout_19.addWidget(self.checkBox_e_stop_mlp, 1, 0, 1, 1)
        self.lineEdit_layer_mlp = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_layer_mlp.setObjectName("lineEdit_layer_mlp")
        self.gridLayout_19.addWidget(self.lineEdit_layer_mlp, 1, 1, 1, 1)
        self.comboBox_activation_mlp = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_activation_mlp.setObjectName("comboBox_activation_mlp")
        self.comboBox_activation_mlp.addItem("")
        self.comboBox_activation_mlp.addItem("")
        self.comboBox_activation_mlp.addItem("")
        self.comboBox_activation_mlp.addItem("")
        self.gridLayout_19.addWidget(self.comboBox_activation_mlp, 1, 2, 1, 1)
        self.comboBox_solvar_mlp = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_solvar_mlp.setObjectName("comboBox_solvar_mlp")
        self.comboBox_solvar_mlp.addItem("")
        self.comboBox_solvar_mlp.addItem("")
        self.comboBox_solvar_mlp.addItem("")
        self.gridLayout_19.addWidget(self.comboBox_solvar_mlp, 1, 3, 1, 1)
        self.doubleSpinBox_alpha_mlp = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.doubleSpinBox_alpha_mlp.setDecimals(4)
        self.doubleSpinBox_alpha_mlp.setMaximum(100.0)
        self.doubleSpinBox_alpha_mlp.setSingleStep(0.1)
        self.doubleSpinBox_alpha_mlp.setProperty("value", 0.0001)
        self.doubleSpinBox_alpha_mlp.setObjectName("doubleSpinBox_alpha_mlp")
        self.gridLayout_19.addWidget(self.doubleSpinBox_alpha_mlp, 1, 4, 1, 1)
        self.doubleSpinBox_valid_mlp = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.doubleSpinBox_valid_mlp.setDecimals(1)
        self.doubleSpinBox_valid_mlp.setMaximum(1.0)
        self.doubleSpinBox_valid_mlp.setSingleStep(0.1)
        self.doubleSpinBox_valid_mlp.setProperty("value", 0.2)
        self.doubleSpinBox_valid_mlp.setObjectName("doubleSpinBox_valid_mlp")
        self.gridLayout_19.addWidget(self.doubleSpinBox_valid_mlp, 1, 5, 1, 1)
        self.gridLayout_22.addLayout(self.gridLayout_19, 0, 0, 1, 1)
        self.gridLayout_27.addWidget(self.groupBox, 0, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_4.setStyleSheet("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.radioButton_dtr = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton_dtr.setStyleSheet("background-color: rgb(202, 251, 201);")
        self.radioButton_dtr.setObjectName("radioButton_dtr")
        self.buttonGroup.addButton(self.radioButton_dtr)
        self.gridLayout_7.addWidget(self.radioButton_dtr, 0, 0, 1, 1)
        self.checkBox_splitter_rnd = QtWidgets.QCheckBox(self.groupBox_4)
        self.checkBox_splitter_rnd.setObjectName("checkBox_splitter_rnd")
        self.gridLayout_7.addWidget(self.checkBox_splitter_rnd, 1, 0, 1, 1)
        self.gridLayout_20.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        self.gridLayout_27.addWidget(self.groupBox_4, 0, 2, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_27, 0, 0, 1, 1)
        self.gridLayout_28 = QtWidgets.QGridLayout()
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.groupBox_2 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_2.setStyleSheet("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.radioButton_knn = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_knn.setStyleSheet("background-color: rgb(252, 249, 206);")
        self.radioButton_knn.setChecked(True)
        self.radioButton_knn.setObjectName("radioButton_knn")
        self.buttonGroup.addButton(self.radioButton_knn)
        self.gridLayout_2.addWidget(self.radioButton_knn, 0, 0, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.groupBox_2)
        self.label_39.setObjectName("label_39")
        self.gridLayout_2.addWidget(self.label_39, 0, 1, 1, 1)
        self.checkBox_knn_weights = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_knn_weights.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_knn_weights.setAutoFillBackground(False)
        self.checkBox_knn_weights.setChecked(True)
        self.checkBox_knn_weights.setObjectName("checkBox_knn_weights")
        self.gridLayout_2.addWidget(self.checkBox_knn_weights, 1, 0, 1, 1)
        self.spinBox_neighbors = QtWidgets.QSpinBox(self.groupBox_2)
        self.spinBox_neighbors.setMinimum(1)
        self.spinBox_neighbors.setMaximum(1000)
        self.spinBox_neighbors.setProperty("value", 5)
        self.spinBox_neighbors.setObjectName("spinBox_neighbors")
        self.gridLayout_2.addWidget(self.spinBox_neighbors, 1, 1, 1, 1)
        self.gridLayout_21.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.gridLayout_28.addWidget(self.groupBox_2, 0, 0, 1, 1)
        self.groupBox_13 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_13.setObjectName("groupBox_13")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.groupBox_13)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.gridLayout_23 = QtWidgets.QGridLayout()
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.radioButton_gpc_2 = QtWidgets.QRadioButton(self.groupBox_13)
        self.radioButton_gpc_2.setStyleSheet("background-color: rgb(206, 185, 167);")
        self.radioButton_gpc_2.setObjectName("radioButton_gpc_2")
        self.buttonGroup.addButton(self.radioButton_gpc_2)
        self.gridLayout_23.addWidget(self.radioButton_gpc_2, 0, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.groupBox_13)
        self.label_7.setObjectName("label_7")
        self.gridLayout_23.addWidget(self.label_7, 0, 1, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.groupBox_13)
        self.label_8.setObjectName("label_8")
        self.gridLayout_23.addWidget(self.label_8, 0, 2, 1, 1)
        self.comboBox_svr_kernel = QtWidgets.QComboBox(self.groupBox_13)
        self.comboBox_svr_kernel.setObjectName("comboBox_svr_kernel")
        self.comboBox_svr_kernel.addItem("")
        self.comboBox_svr_kernel.addItem("")
        self.comboBox_svr_kernel.addItem("")
        self.comboBox_svr_kernel.addItem("")
        self.gridLayout_23.addWidget(self.comboBox_svr_kernel, 1, 1, 1, 1)
        self.doubleSpinBox_svr_c = QtWidgets.QDoubleSpinBox(self.groupBox_13)
        self.doubleSpinBox_svr_c.setMinimum(0.01)
        self.doubleSpinBox_svr_c.setProperty("value", 10.0)
        self.doubleSpinBox_svr_c.setObjectName("doubleSpinBox_svr_c")
        self.gridLayout_23.addWidget(self.doubleSpinBox_svr_c, 1, 2, 1, 1)
        self.gridLayout_24.addLayout(self.gridLayout_23, 0, 0, 1, 1)
        self.gridLayout_28.addWidget(self.groupBox_13, 0, 1, 1, 1)
        self.groupBox_10 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_10.setStyleSheet("")
        self.groupBox_10.setObjectName("groupBox_10")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.groupBox_10)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.radioButton_rfr = QtWidgets.QRadioButton(self.groupBox_10)
        self.radioButton_rfr.setAutoFillBackground(False)
        self.radioButton_rfr.setStyleSheet("background-color: rgb(186, 253, 233);")
        self.radioButton_rfr.setObjectName("radioButton_rfr")
        self.buttonGroup.addButton(self.radioButton_rfr)
        self.gridLayout_15.addWidget(self.radioButton_rfr, 0, 1, 1, 1)
        self.spinBox_rfr_n = QtWidgets.QSpinBox(self.groupBox_10)
        self.spinBox_rfr_n.setMinimum(1)
        self.spinBox_rfr_n.setMaximum(10000)
        self.spinBox_rfr_n.setSingleStep(50)
        self.spinBox_rfr_n.setProperty("value", 100)
        self.spinBox_rfr_n.setObjectName("spinBox_rfr_n")
        self.gridLayout_15.addWidget(self.spinBox_rfr_n, 0, 2, 1, 1)
        self.radioButton_etr = QtWidgets.QRadioButton(self.groupBox_10)
        self.radioButton_etr.setStyleSheet("background-color: rgb(161, 245, 173);")
        self.radioButton_etr.setObjectName("radioButton_etr")
        self.buttonGroup.addButton(self.radioButton_etr)
        self.gridLayout_15.addWidget(self.radioButton_etr, 1, 1, 1, 1)
        self.radioButton_abr = QtWidgets.QRadioButton(self.groupBox_10)
        self.radioButton_abr.setStyleSheet("background-color: rgb(208, 253, 151);")
        self.radioButton_abr.setObjectName("radioButton_abr")
        self.buttonGroup.addButton(self.radioButton_abr)
        self.gridLayout_15.addWidget(self.radioButton_abr, 1, 2, 1, 1)
        self.gridLayout_16.addLayout(self.gridLayout_15, 0, 0, 1, 1)
        self.gridLayout_28.addWidget(self.groupBox_10, 0, 2, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_28, 1, 0, 1, 1)
        self.gridLayout_29 = QtWidgets.QGridLayout()
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.groupBox_6 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_6.setStyleSheet("")
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.radioButton_gbc = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton_gbc.setStyleSheet("background-color: rgb(187, 227, 250);")
        self.radioButton_gbc.setChecked(False)
        self.radioButton_gbc.setObjectName("radioButton_gbc")
        self.buttonGroup.addButton(self.radioButton_gbc)
        self.gridLayout_6.addWidget(self.radioButton_gbc, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox_6)
        self.label_5.setObjectName("label_5")
        self.gridLayout_6.addWidget(self.label_5, 0, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox_6)
        self.label_6.setObjectName("label_6")
        self.gridLayout_6.addWidget(self.label_6, 0, 2, 1, 1)
        self.doubleSpinBox_learning_rate = QtWidgets.QDoubleSpinBox(self.groupBox_6)
        self.doubleSpinBox_learning_rate.setMinimum(0.01)
        self.doubleSpinBox_learning_rate.setSingleStep(0.1)
        self.doubleSpinBox_learning_rate.setProperty("value", 0.5)
        self.doubleSpinBox_learning_rate.setObjectName("doubleSpinBox_learning_rate")
        self.gridLayout_6.addWidget(self.doubleSpinBox_learning_rate, 1, 1, 1, 1)
        self.spinBox_n_estimators = QtWidgets.QSpinBox(self.groupBox_6)
        self.spinBox_n_estimators.setMinimum(1)
        self.spinBox_n_estimators.setMaximum(10000)
        self.spinBox_n_estimators.setSingleStep(50)
        self.spinBox_n_estimators.setProperty("value", 200)
        self.spinBox_n_estimators.setObjectName("spinBox_n_estimators")
        self.gridLayout_6.addWidget(self.spinBox_n_estimators, 1, 2, 1, 1)
        self.gridLayout_25.addLayout(self.gridLayout_6, 0, 0, 1, 1)
        self.gridLayout_29.addWidget(self.groupBox_6, 0, 0, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_8.setStyleSheet("")
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.radioButton_lr = QtWidgets.QRadioButton(self.groupBox_8)
        self.radioButton_lr.setToolTip("")
        self.radioButton_lr.setStyleSheet("background-color: rgb(252, 222, 222);")
        self.radioButton_lr.setObjectName("radioButton_lr")
        self.buttonGroup.addButton(self.radioButton_lr)
        self.gridLayout_13.addWidget(self.radioButton_lr, 0, 0, 1, 1)
        self.checkBox_fit_intercept = QtWidgets.QCheckBox(self.groupBox_8)
        self.checkBox_fit_intercept.setObjectName("checkBox_fit_intercept")
        self.gridLayout_13.addWidget(self.checkBox_fit_intercept, 1, 0, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_13, 0, 0, 1, 1)
        self.gridLayout_29.addWidget(self.groupBox_8, 0, 1, 1, 1)
        self.groupBox_7 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_7.setStyleSheet("")
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.label = QtWidgets.QLabel(self.groupBox_7)
        self.label.setObjectName("label")
        self.gridLayout_11.addWidget(self.label, 0, 1, 1, 1)
        self.radioButton_lasso = QtWidgets.QRadioButton(self.groupBox_7)
        self.radioButton_lasso.setStyleSheet("background-color: rgb(233, 216, 252);")
        self.radioButton_lasso.setObjectName("radioButton_lasso")
        self.buttonGroup.addButton(self.radioButton_lasso)
        self.gridLayout_11.addWidget(self.radioButton_lasso, 1, 0, 1, 1)
        self.radioButton_en = QtWidgets.QRadioButton(self.groupBox_7)
        self.radioButton_en.setStyleSheet("background-color: rgb(227, 200, 255);")
        self.radioButton_en.setObjectName("radioButton_en")
        self.buttonGroup.addButton(self.radioButton_en)
        self.gridLayout_11.addWidget(self.radioButton_en, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_7)
        self.label_2.setObjectName("label_2")
        self.gridLayout_11.addWidget(self.label_2, 0, 2, 1, 1)
        self.doubleSpinBox_alpha = QtWidgets.QDoubleSpinBox(self.groupBox_7)
        self.doubleSpinBox_alpha.setDecimals(1)
        self.doubleSpinBox_alpha.setSingleStep(0.1)
        self.doubleSpinBox_alpha.setProperty("value", 0.5)
        self.doubleSpinBox_alpha.setObjectName("doubleSpinBox_alpha")
        self.gridLayout_11.addWidget(self.doubleSpinBox_alpha, 1, 1, 1, 1)
        self.doubleSpinBox_l1_ratio = QtWidgets.QDoubleSpinBox(self.groupBox_7)
        self.doubleSpinBox_l1_ratio.setDecimals(2)
        self.doubleSpinBox_l1_ratio.setMaximum(1.0)
        self.doubleSpinBox_l1_ratio.setSingleStep(0.01)
        self.doubleSpinBox_l1_ratio.setProperty("value", 0.5)
        self.doubleSpinBox_l1_ratio.setObjectName("doubleSpinBox_l1_ratio")
        self.gridLayout_11.addWidget(self.doubleSpinBox_l1_ratio, 1, 2, 1, 1)
        self.gridLayout_12.addLayout(self.gridLayout_11, 0, 1, 1, 1)
        self.gridLayout_29.addWidget(self.groupBox_7, 0, 2, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_29, 2, 0, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_3.setStyleSheet("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.radioButton_gpr = QtWidgets.QRadioButton(self.groupBox_3)
        self.radioButton_gpr.setStyleSheet("background-color: rgb(251, 228, 170);")
        self.radioButton_gpr.setObjectName("radioButton_gpr")
        self.buttonGroup.addButton(self.radioButton_gpr)
        self.gridLayout_3.addWidget(self.radioButton_gpr, 0, 0, 1, 1)
        self.label_37 = QtWidgets.QLabel(self.groupBox_3)
        self.label_37.setObjectName("label_37")
        self.gridLayout_3.addWidget(self.label_37, 0, 1, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.groupBox_3)
        self.label_40.setObjectName("label_40")
        self.gridLayout_3.addWidget(self.label_40, 0, 2, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.groupBox_3)
        self.label_27.setObjectName("label_27")
        self.gridLayout_3.addWidget(self.label_27, 0, 3, 1, 1)
        self.gridLayout_101 = QtWidgets.QGridLayout()
        self.gridLayout_101.setObjectName("gridLayout_101")
        self.doubleSpinBox_gpc_wigth = QtWidgets.QDoubleSpinBox(self.groupBox_3)
        self.doubleSpinBox_gpc_wigth.setMinimum(0.01)
        self.doubleSpinBox_gpc_wigth.setMaximum(100.0)
        self.doubleSpinBox_gpc_wigth.setSingleStep(0.1)
        self.doubleSpinBox_gpc_wigth.setProperty("value", 1.0)
        self.doubleSpinBox_gpc_wigth.setObjectName("doubleSpinBox_gpc_wigth")
        self.gridLayout_101.addWidget(self.doubleSpinBox_gpc_wigth, 0, 0, 1, 1)
        self.doubleSpinBox_gpc_scale = QtWidgets.QDoubleSpinBox(self.groupBox_3)
        self.doubleSpinBox_gpc_scale.setMinimum(0.01)
        self.doubleSpinBox_gpc_scale.setMaximum(100.0)
        self.doubleSpinBox_gpc_scale.setSingleStep(0.1)
        self.doubleSpinBox_gpc_scale.setProperty("value", 1.0)
        self.doubleSpinBox_gpc_scale.setObjectName("doubleSpinBox_gpc_scale")
        self.gridLayout_101.addWidget(self.doubleSpinBox_gpc_scale, 0, 1, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_101, 1, 1, 1, 1)
        self.spinBox_gpc_n_restart = QtWidgets.QSpinBox(self.groupBox_3)
        self.spinBox_gpc_n_restart.setObjectName("spinBox_gpc_n_restart")
        self.gridLayout_3.addWidget(self.spinBox_gpc_n_restart, 1, 2, 1, 1)
        self.comboBox_gpc_multi = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox_gpc_multi.setObjectName("comboBox_gpc_multi")
        self.comboBox_gpc_multi.addItem("")
        self.comboBox_gpc_multi.addItem("")
        self.gridLayout_3.addWidget(self.comboBox_gpc_multi, 1, 3, 1, 1)
        self.gridLayout_26.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        self.groupBox_14 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_14.setStyleSheet("")
        self.groupBox_14.setObjectName("groupBox_14")
        self.gridLayout_43 = QtWidgets.QGridLayout(self.groupBox_14)
        self.gridLayout_43.setObjectName("gridLayout_43")
        self.gridLayout_44 = QtWidgets.QGridLayout()
        self.gridLayout_44.setObjectName("gridLayout_44")
        self.radioButton_gbc_7 = QtWidgets.QRadioButton(self.groupBox_14)
        self.radioButton_gbc_7.setStyleSheet("background-color: rgb(187, 227, 250);")
        self.radioButton_gbc_7.setChecked(False)
        self.radioButton_gbc_7.setObjectName("radioButton_gbc_7")
        self.buttonGroup.addButton(self.radioButton_gbc_7)
        self.gridLayout_44.addWidget(self.radioButton_gbc_7, 0, 0, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.groupBox_14)
        self.label_19.setObjectName("label_19")
        self.gridLayout_44.addWidget(self.label_19, 0, 1, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.groupBox_14)
        self.label_20.setObjectName("label_20")
        self.gridLayout_44.addWidget(self.label_20, 0, 2, 1, 1)
        self.doubleSpinBox_learning_rate_xgb = QtWidgets.QDoubleSpinBox(self.groupBox_14)
        self.doubleSpinBox_learning_rate_xgb.setDecimals(5)
        self.doubleSpinBox_learning_rate_xgb.setMinimum(1e-05)
        self.doubleSpinBox_learning_rate_xgb.setSingleStep(0.1)
        self.doubleSpinBox_learning_rate_xgb.setProperty("value", 0.1)
        self.doubleSpinBox_learning_rate_xgb.setObjectName("doubleSpinBox_learning_rate_xgb")
        self.gridLayout_44.addWidget(self.doubleSpinBox_learning_rate_xgb, 1, 1, 1, 1)
        self.spinBox_n_estimators_xgb = QtWidgets.QSpinBox(self.groupBox_14)
        self.spinBox_n_estimators_xgb.setMinimum(1)
        self.spinBox_n_estimators_xgb.setMaximum(10000)
        self.spinBox_n_estimators_xgb.setSingleStep(50)
        self.spinBox_n_estimators_xgb.setProperty("value", 10)
        self.spinBox_n_estimators_xgb.setObjectName("spinBox_n_estimators_xgb")
        self.gridLayout_44.addWidget(self.spinBox_n_estimators_xgb, 1, 2, 1, 1)
        self.gridLayout_43.addLayout(self.gridLayout_44, 0, 0, 1, 1)
        self.gridLayout_26.addWidget(self.groupBox_14, 0, 1, 1, 1)
        self.gridLayout_14.addWidget(self.groupBox_3, 3, 0, 1, 1)
        self.gridLayout_18.addLayout(self.gridLayout_14, 0, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_12 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_12.setObjectName("groupBox_12")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.groupBox_12)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.spinBox_lof_neighbor = QtWidgets.QSpinBox(self.groupBox_12)
        self.spinBox_lof_neighbor.setMinimum(1)
        self.spinBox_lof_neighbor.setMaximum(100000)
        self.spinBox_lof_neighbor.setProperty("value", 20)
        self.spinBox_lof_neighbor.setObjectName("spinBox_lof_neighbor")
        self.gridLayout_17.addWidget(self.spinBox_lof_neighbor, 0, 0, 1, 1)
        self.pushButton_lof = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_lof.setObjectName("pushButton_lof")
        self.gridLayout_17.addWidget(self.pushButton_lof, 0, 1, 1, 1)
        self.gridLayout.addWidget(self.groupBox_12, 0, 0, 1, 3)
        self.groupBox_5 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.checkBox_stv_knnr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_knnr.setStyleSheet("background-color: rgb(252, 249, 206);")
        self.checkBox_stv_knnr.setObjectName("checkBox_stv_knnr")
        self.gridLayout_4.addWidget(self.checkBox_stv_knnr, 3, 0, 1, 1)
        self.radioButton_voting = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_voting.setObjectName("radioButton_voting")
        self.buttonGroup_stack_vote = QtWidgets.QButtonGroup(RegressorForm)
        self.buttonGroup_stack_vote.setObjectName("buttonGroup_stack_vote")
        self.buttonGroup_stack_vote.addButton(self.radioButton_voting)
        self.gridLayout_4.addWidget(self.radioButton_voting, 1, 1, 1, 1)
        self.checkBox_stv_gbr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_gbr.setStyleSheet("background-color: rgb(187, 227, 250);")
        self.checkBox_stv_gbr.setObjectName("checkBox_stv_gbr")
        self.gridLayout_4.addWidget(self.checkBox_stv_gbr, 2, 1, 1, 1)
        self.checkBox_stack_vote = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stack_vote.setObjectName("checkBox_stack_vote")
        self.gridLayout_4.addWidget(self.checkBox_stack_vote, 0, 0, 1, 1)
        self.checkBox_stv_mlpr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_mlpr.setStyleSheet("background-color: rgb(252, 226, 251);")
        self.checkBox_stv_mlpr.setObjectName("checkBox_stv_mlpr")
        self.gridLayout_4.addWidget(self.checkBox_stv_mlpr, 2, 0, 1, 1)
        self.checkBox_stv_gpr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_gpr.setStyleSheet("background-color: rgb(251, 228, 170);")
        self.checkBox_stv_gpr.setObjectName("checkBox_stv_gpr")
        self.gridLayout_4.addWidget(self.checkBox_stv_gpr, 4, 0, 1, 1)
        self.checkBox_stv_rfr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_rfr.setStyleSheet("background-color: rgb(186, 253, 233);")
        self.checkBox_stv_rfr.setObjectName("checkBox_stv_rfr")
        self.gridLayout_4.addWidget(self.checkBox_stv_rfr, 3, 1, 1, 1)
        self.checkBox_stv_svr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_svr.setStyleSheet("background-color: rgb(206, 185, 167);")
        self.checkBox_stv_svr.setObjectName("checkBox_stv_svr")
        self.gridLayout_4.addWidget(self.checkBox_stv_svr, 6, 0, 1, 1)
        self.radioButton_stacking = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton_stacking.setChecked(True)
        self.radioButton_stacking.setObjectName("radioButton_stacking")
        self.buttonGroup_stack_vote.addButton(self.radioButton_stacking)
        self.gridLayout_4.addWidget(self.radioButton_stacking, 0, 1, 1, 1)
        self.checkBox_stv_dtr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_dtr.setStyleSheet("background-color: rgb(202, 251, 201);")
        self.checkBox_stv_dtr.setObjectName("checkBox_stv_dtr")
        self.gridLayout_4.addWidget(self.checkBox_stv_dtr, 5, 0, 1, 1)
        self.checkBox_stv_lasso = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_lasso.setStyleSheet("background-color: rgb(233, 216, 252);")
        self.checkBox_stv_lasso.setObjectName("checkBox_stv_lasso")
        self.gridLayout_4.addWidget(self.checkBox_stv_lasso, 7, 1, 1, 1)
        self.checkBox_stv_en = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_en.setStyleSheet("background-color: rgb(227, 200, 255);")
        self.checkBox_stv_en.setObjectName("checkBox_stv_en")
        self.gridLayout_4.addWidget(self.checkBox_stv_en, 6, 1, 1, 1)
        self.checkBox_stv_etr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_etr.setStyleSheet("background-color: rgb(161, 245, 173);")
        self.checkBox_stv_etr.setObjectName("checkBox_stv_etr")
        self.gridLayout_4.addWidget(self.checkBox_stv_etr, 4, 1, 1, 1)
        self.checkBox_stv_lr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_lr.setStyleSheet("background-color: rgb(252, 222, 222);")
        self.checkBox_stv_lr.setObjectName("checkBox_stv_lr")
        self.gridLayout_4.addWidget(self.checkBox_stv_lr, 7, 0, 1, 1)
        self.checkBox_stv_abr = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_stv_abr.setStyleSheet("background-color: rgb(208, 253, 151);")
        self.checkBox_stv_abr.setObjectName("checkBox_stv_abr")
        self.gridLayout_4.addWidget(self.checkBox_stv_abr, 5, 1, 1, 1)
        self.gridLayout_10.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_5, 1, 0, 1, 3)
        self.groupBox_9 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_9.setObjectName("groupBox_9")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.groupBox_9)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.checkBox_cross_val = QtWidgets.QCheckBox(self.groupBox_9)
        self.checkBox_cross_val.setText("")
        self.checkBox_cross_val.setObjectName("checkBox_cross_val")
        self.gridLayout_9.addWidget(self.checkBox_cross_val, 0, 0, 1, 1)
        self.spinBox_n_cross_val = QtWidgets.QSpinBox(self.groupBox_9)
        self.spinBox_n_cross_val.setMinimum(2)
        self.spinBox_n_cross_val.setProperty("value", 5)
        self.spinBox_n_cross_val.setObjectName("spinBox_n_cross_val")
        self.gridLayout_9.addWidget(self.spinBox_n_cross_val, 0, 1, 1, 1)
        self.gridLayout.addWidget(self.groupBox_9, 2, 0, 1, 1)
        self.groupBox_16 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_16.setObjectName("groupBox_16")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.groupBox_16)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.spinBox_bagging = QtWidgets.QSpinBox(self.groupBox_16)
        self.spinBox_bagging.setMinimum(5)
        self.spinBox_bagging.setMaximum(1000)
        self.spinBox_bagging.setProperty("value", 10)
        self.spinBox_bagging.setObjectName("spinBox_bagging")
        self.gridLayout_32.addWidget(self.spinBox_bagging, 0, 1, 1, 1)
        self.checkBox_baggig = QtWidgets.QCheckBox(self.groupBox_16)
        self.checkBox_baggig.setText("")
        self.checkBox_baggig.setObjectName("checkBox_baggig")
        self.gridLayout_32.addWidget(self.checkBox_baggig, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_16, 2, 2, 1, 1)
        self.groupBox_11 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_11.setObjectName("groupBox_11")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_11)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.checkBox_pca = QtWidgets.QCheckBox(self.groupBox_11)
        self.checkBox_pca.setText("")
        self.checkBox_pca.setObjectName("checkBox_pca")
        self.gridLayout_8.addWidget(self.checkBox_pca, 0, 0, 1, 1)
        self.spinBox_pca = QtWidgets.QSpinBox(self.groupBox_11)
        self.spinBox_pca.setMaximum(1000)
        self.spinBox_pca.setObjectName("spinBox_pca")
        self.gridLayout_8.addWidget(self.spinBox_pca, 0, 1, 1, 1)
        self.checkBox_pca_mle = QtWidgets.QCheckBox(self.groupBox_11)
        self.checkBox_pca_mle.setObjectName("checkBox_pca_mle")
        self.gridLayout_8.addWidget(self.checkBox_pca_mle, 0, 2, 1, 1)
        self.gridLayout.addWidget(self.groupBox_11, 3, 0, 1, 3)
        self.pushButton_calc = QtWidgets.QPushButton(RegressorForm)
        self.pushButton_calc.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_calc.setStyleSheet("background-color: rgb(255, 204, 121);")
        self.pushButton_calc.setAutoRepeatInterval(100)
        self.pushButton_calc.setObjectName("pushButton_calc")
        self.gridLayout.addWidget(self.pushButton_calc, 5, 0, 1, 1)
        self.pushButton_add_to_lineup = QtWidgets.QPushButton(RegressorForm)
        self.pushButton_add_to_lineup.setStyleSheet("background-color: rgb(252, 204, 165);")
        self.pushButton_add_to_lineup.setObjectName("pushButton_add_to_lineup")
        self.gridLayout.addWidget(self.pushButton_add_to_lineup, 4, 0, 1, 1)
        self.splitter = QtWidgets.QSplitter(RegressorForm)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.checkBox_save_model = QtWidgets.QCheckBox(self.splitter)
        self.checkBox_save_model.setObjectName("checkBox_save_model")
        self.gridLayout.addWidget(self.splitter, 4, 2, 1, 1)
        self.groupBox_17 = QtWidgets.QGroupBox(RegressorForm)
        self.groupBox_17.setObjectName("groupBox_17")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.groupBox_17)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.gridLayout_31 = QtWidgets.QGridLayout()
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.checkBox_stdscaler_reg = QtWidgets.QCheckBox(self.groupBox_17)
        self.checkBox_stdscaler_reg.setChecked(True)
        self.checkBox_stdscaler_reg.setObjectName("checkBox_stdscaler_reg")
        self.gridLayout_31.addWidget(self.checkBox_stdscaler_reg, 0, 0, 1, 1)
        self.checkBox_robscaler_reg = QtWidgets.QCheckBox(self.groupBox_17)
        self.checkBox_robscaler_reg.setObjectName("checkBox_robscaler_reg")
        self.gridLayout_31.addWidget(self.checkBox_robscaler_reg, 1, 0, 1, 1)
        self.checkBox_mnmxscaler_reg = QtWidgets.QCheckBox(self.groupBox_17)
        self.checkBox_mnmxscaler_reg.setObjectName("checkBox_mnmxscaler_reg")
        self.gridLayout_31.addWidget(self.checkBox_mnmxscaler_reg, 2, 0, 1, 1)
        self.checkBox_mxabsscaler_reg = QtWidgets.QCheckBox(self.groupBox_17)
        self.checkBox_mxabsscaler_reg.setObjectName("checkBox_mxabsscaler_reg")
        self.gridLayout_31.addWidget(self.checkBox_mxabsscaler_reg, 3, 0, 1, 1)
        self.gridLayout_37.addLayout(self.gridLayout_31, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_17, 2, 1, 1, 1)
        self.pushButton_random_param = QtWidgets.QPushButton(RegressorForm)
        self.pushButton_random_param.setStyleSheet("background-color: rgb(220, 80, 221);")
        self.pushButton_random_param.setObjectName("pushButton_random_param")
        self.gridLayout.addWidget(self.pushButton_random_param, 5, 1, 1, 1)
        self.gridLayout_18.addLayout(self.gridLayout, 0, 1, 1, 1)

        self.retranslateUi(RegressorForm)
        self.comboBox_solvar_mlp.setCurrentIndex(1)
        self.comboBox_svr_kernel.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(RegressorForm)

    def retranslateUi(self, RegressorForm):
        _translate = QtCore.QCoreApplication.translate
        RegressorForm.setWindowTitle(_translate("RegressorForm", "Regression"))
        self.groupBox.setTitle(_translate("RegressorForm", "Multi-layer Perceptron Regressor"))
        self.radioButton_mlp.setToolTip(_translate("RegressorForm", "Multi-layer Perceptron Regressor"))
        self.radioButton_mlp.setText(_translate("RegressorForm", "MLPR"))
        self.label_36.setText(_translate("RegressorForm", "hidden layer"))
        self.label_38.setText(_translate("RegressorForm", "activat"))
        self.label_42.setText(_translate("RegressorForm", "solver"))
        self.label_43.setText(_translate("RegressorForm", "alpha"))
        self.label_44.setText(_translate("RegressorForm", "valid %"))
        self.checkBox_e_stop_mlp.setText(_translate("RegressorForm", "e-stop"))
        self.lineEdit_layer_mlp.setText(_translate("RegressorForm", "500"))
        self.comboBox_activation_mlp.setItemText(0, _translate("RegressorForm", "relu"))
        self.comboBox_activation_mlp.setItemText(1, _translate("RegressorForm", "logistic"))
        self.comboBox_activation_mlp.setItemText(2, _translate("RegressorForm", "tanh"))
        self.comboBox_activation_mlp.setItemText(3, _translate("RegressorForm", "identity"))
        self.comboBox_solvar_mlp.setCurrentText(_translate("RegressorForm", "lbfgs"))
        self.comboBox_solvar_mlp.setItemText(0, _translate("RegressorForm", "adam"))
        self.comboBox_solvar_mlp.setItemText(1, _translate("RegressorForm", "lbfgs"))
        self.comboBox_solvar_mlp.setItemText(2, _translate("RegressorForm", "sgd"))
        self.groupBox_4.setTitle(_translate("RegressorForm", "DecisionTree"))
        self.radioButton_dtr.setToolTip(_translate("RegressorForm", "Decision Tree Regressor"))
        self.radioButton_dtr.setText(_translate("RegressorForm", "DTR"))
        self.checkBox_splitter_rnd.setToolTip(_translate("RegressorForm", "Стратегия, используемая для выбора разделения в узлах. Возможные значения - \"best\" (выбирается лучшее разделение) или \"random\" (выбирается случайное разделение)"))
        self.checkBox_splitter_rnd.setText(_translate("RegressorForm", "rnd"))
        self.groupBox_2.setTitle(_translate("RegressorForm", "KNeighbors Regressor"))
        self.radioButton_knn.setToolTip(_translate("RegressorForm", "K-Nearest Neighbors Regressor"))
        self.radioButton_knn.setText(_translate("RegressorForm", "KNNR"))
        self.label_39.setText(_translate("RegressorForm", "N neighbors:"))
        self.checkBox_knn_weights.setText(_translate("RegressorForm", "weight"))
        self.groupBox_13.setTitle(_translate("RegressorForm", "SVR"))
        self.radioButton_gpc_2.setToolTip(_translate("RegressorForm", "Support Vector Machines"))
        self.radioButton_gpc_2.setText(_translate("RegressorForm", "SVR"))
        self.label_7.setToolTip(_translate("RegressorForm", "Ядро, которое определяет тип нелинейности в модели. "))
        self.label_7.setText(_translate("RegressorForm", "kernel:"))
        self.label_8.setToolTip(_translate("RegressorForm", "Параметр регуляризации. Он контролирует компромисс между подгонкой данных и регуляризацией. Меньшие значения C приводят к более сильной регуляризации, что может помочь уменьшить переобучение. Большие значения C уменьшают регуляризацию, что может привести к лучшему соответствию данным."))
        self.label_8.setText(_translate("RegressorForm", "C:"))
        self.comboBox_svr_kernel.setToolTip(_translate("RegressorForm", "Ядро, которое определяет тип нелинейности в модели. "))
        self.comboBox_svr_kernel.setItemText(0, _translate("RegressorForm", "poly"))
        self.comboBox_svr_kernel.setItemText(1, _translate("RegressorForm", "rbf"))
        self.comboBox_svr_kernel.setItemText(2, _translate("RegressorForm", "linear"))
        self.comboBox_svr_kernel.setItemText(3, _translate("RegressorForm", "sigmoid"))
        self.doubleSpinBox_svr_c.setToolTip(_translate("RegressorForm", "Параметр регуляризации. Он контролирует компромисс между подгонкой данных и регуляризацией. Меньшие значения C приводят к более сильной регуляризации, что может помочь уменьшить переобучение. Большие значения C уменьшают регуляризацию, что может привести к лучшему соответствию данным."))
        self.groupBox_10.setTitle(_translate("RegressorForm", "RandomForest"))
        self.radioButton_rfr.setToolTip(_translate("RegressorForm", "Random Forest Regressor"))
        self.radioButton_rfr.setText(_translate("RegressorForm", "RFR"))
        self.radioButton_etr.setToolTip(_translate("RegressorForm", "ExtraTrees"))
        self.radioButton_etr.setText(_translate("RegressorForm", "ETR"))
        self.radioButton_abr.setToolTip(_translate("RegressorForm", "AdaBoost"))
        self.radioButton_abr.setText(_translate("RegressorForm", "ABR"))
        self.groupBox_6.setTitle(_translate("RegressorForm", "GradientBoosting Regressor"))
        self.radioButton_gbc.setToolTip(_translate("RegressorForm", "Gradient Boosting Regressor"))
        self.radioButton_gbc.setText(_translate("RegressorForm", "GBR"))
        self.label_5.setToolTip(_translate("RegressorForm", "Этот параметр контролирует величину шага при обновлении весов моделей на каждой итерации бустинга. Меньшие значения learning_rate требуют большего числа деревьев для достижения хорошей точности, но могут улучшить устойчивость модели."))
        self.label_5.setText(_translate("RegressorForm", "learning_rate:"))
        self.label_6.setToolTip(_translate("RegressorForm", "Это количество базовых моделей (например, деревьев решений), которые будут объединены для создания финальной модели. Большее количество деревьев может улучшить точность модели, но также увеличит время обучения. "))
        self.label_6.setText(_translate("RegressorForm", "n_estimators:"))
        self.doubleSpinBox_learning_rate.setToolTip(_translate("RegressorForm", "Этот параметр контролирует величину шага при обновлении весов моделей на каждой итерации бустинга. Меньшие значения learning_rate требуют большего числа деревьев для достижения хорошей точности, но могут улучшить устойчивость модели."))
        self.spinBox_n_estimators.setToolTip(_translate("RegressorForm", "Это количество базовых моделей (например, деревьев решений), которые будут объединены для создания финальной модели. Большее количество деревьев может улучшить точность модели, но также увеличит время обучения. "))
        self.groupBox_8.setTitle(_translate("RegressorForm", "LinearRegression"))
        self.radioButton_lr.setText(_translate("RegressorForm", "LR"))
        self.checkBox_fit_intercept.setToolTip(_translate("RegressorForm", "fit_intercept, Определяет, нужно ли добавлять свободный член (пересечение) в модель. Если fit_intercept включен, то модель будет иметь угол наклона и свободный член (смещение). Если fit_intercept отключен, то угол наклона будет определен без свободного члена."))
        self.checkBox_fit_intercept.setText(_translate("RegressorForm", "fit"))
        self.groupBox_7.setTitle(_translate("RegressorForm", "ElasticNet, Lasso"))
        self.label.setToolTip(_translate("RegressorForm", "Этот параметр контролирует общую силу регуляризации."))
        self.label.setText(_translate("RegressorForm", "alpha:"))
        self.radioButton_lasso.setToolTip(_translate("RegressorForm", "Lasso"))
        self.radioButton_lasso.setText(_translate("RegressorForm", "LSS"))
        self.radioButton_en.setToolTip(_translate("RegressorForm", "ElasticNet"))
        self.radioButton_en.setText(_translate("RegressorForm", "EN"))
        self.label_2.setToolTip(_translate("RegressorForm", "Этот параметр определяет смешивание регрессии L1 и L2 в ElasticNet. Значение l1_ratio находится в диапазоне от 0 до 1. Когда l1_ratio = 0, это эквивалентно регрессии L2 (Ridge). Когда l1_ratio = 1, это эквивалентно регрессии L1 (Lasso). При значениях между 0 и 1, это комбинация обеих регрессий."))
        self.label_2.setText(_translate("RegressorForm", "l1_ratio:"))
        self.doubleSpinBox_alpha.setToolTip(_translate("RegressorForm", "Этот параметр контролирует общую силу регуляризации."))
        self.doubleSpinBox_l1_ratio.setToolTip(_translate("RegressorForm", "Этот параметр определяет смешивание регрессии L1 и L2 в ElasticNet. Значение l1_ratio находится в диапазоне от 0 до 1. Когда l1_ratio = 0, это эквивалентно регрессии L2 (Ridge). Когда l1_ratio = 1, это эквивалентно регрессии L1 (Lasso). При значениях между 0 и 1, это комбинация обеих регрессий."))
        self.groupBox_3.setTitle(_translate("RegressorForm", "GaussianProcess Regressor"))
        self.radioButton_gpr.setToolTip(_translate("RegressorForm", "Gaussian Process Regressor"))
        self.radioButton_gpr.setText(_translate("RegressorForm", "GPR"))
        self.label_37.setText(_translate("RegressorForm", "Ядро (ширина и масшаб):"))
        self.label_40.setToolTip(_translate("RegressorForm", "Определяет количество повторных запусков оптимизации параметров для выбора наилучшего значения. Это может помочь избежать локальных оптимумов."))
        self.label_40.setText(_translate("RegressorForm", "n_restart_optim:"))
        self.label_27.setToolTip(_translate("RegressorForm", "Определяет подход к мультиклассовой классификации. Возможные варианты:\n"
"\n"
"\"one_vs_rest\" - Один против всех (по умолчанию). Строит бинарные классификаторы для каждого класса по отдельности.\n"
"\"one_vs_one\" - Один против одного. Строит бинарные классификаторы для всех возможных пар классов."))
        self.label_27.setText(_translate("RegressorForm", "multi_class:"))
        self.doubleSpinBox_gpc_wigth.setToolTip(_translate("RegressorForm", "Ширина ядра. В гауссовском процессе ширина ядра определяет, насколько далеко друг от друга могут находиться две точки, чтобы их взаимосвязь была учтена в модели. Большая ширина позволяет учитывать большее расстояние, что делает гауссовский процесс более гладким, но менее подстраивающимся под данные. Наоборот, маленькая ширина делает гауссовский процесс более чувствительным к данным."))
        self.doubleSpinBox_gpc_scale.setToolTip(_translate("RegressorForm", "Это коэффициент масштабирования, который влияет на общую масштабируемость и вклад ядра в модель. Применение этого коэффициента масштабирования может быть полезным, когда наблюдения имеют различные масштабы или когда у нас есть априорная информация о важности или распределении вклада ядра в модель. Он позволяет управлять \"весом\" ядра и его влиянием на предсказания."))
        self.spinBox_gpc_n_restart.setToolTip(_translate("RegressorForm", "Определяет количество повторных запусков оптимизации параметров для выбора наилучшего значения. Это может помочь избежать локальных оптимумов."))
        self.comboBox_gpc_multi.setToolTip(_translate("RegressorForm", "Определяет подход к мультиклассовой классификации. Возможные варианты:\n"
"\n"
"\"one_vs_rest\" - Один против всех (по умолчанию). Строит бинарные классификаторы для каждого класса по отдельности.\n"
"\"one_vs_one\" - Один против одного. Строит бинарные классификаторы для всех возможных пар классов."))
        self.comboBox_gpc_multi.setItemText(0, _translate("RegressorForm", "one_vs_rest"))
        self.comboBox_gpc_multi.setItemText(1, _translate("RegressorForm", "one_vs_one"))
        self.groupBox_14.setTitle(_translate("RegressorForm", "XGBoostRegressor"))
        self.radioButton_gbc_7.setToolTip(_translate("RegressorForm", "Gradient Boosting Regressor"))
        self.radioButton_gbc_7.setText(_translate("RegressorForm", "XGB"))
        self.label_19.setToolTip(_translate("RegressorForm", "Этот параметр контролирует величину шага при обновлении весов моделей на каждой итерации бустинга. Меньшие значения learning_rate требуют большего числа деревьев для достижения хорошей точности, но могут улучшить устойчивость модели."))
        self.label_19.setText(_translate("RegressorForm", "learning_rate:"))
        self.label_20.setToolTip(_translate("RegressorForm", "Это количество базовых моделей (например, деревьев решений), которые будут объединены для создания финальной модели. Большее количество деревьев может улучшить точность модели, но также увеличит время обучения. "))
        self.label_20.setText(_translate("RegressorForm", "n_estimators:"))
        self.doubleSpinBox_learning_rate_xgb.setToolTip(_translate("RegressorForm", "Этот параметр контролирует величину шага при обновлении весов моделей на каждой итерации бустинга. Меньшие значения learning_rate требуют большего числа деревьев для достижения хорошей точности, но могут улучшить устойчивость модели."))
        self.spinBox_n_estimators_xgb.setToolTip(_translate("RegressorForm", "Это количество базовых моделей (например, деревьев решений), которые будут объединены для создания финальной модели. Большее количество деревьев может улучшить точность модели, но также увеличит время обучения. "))
        self.groupBox_12.setTitle(_translate("RegressorForm", "Выбросы"))
        self.pushButton_lof.setText(_translate("RegressorForm", "LOF"))
        self.groupBox_5.setTitle(_translate("RegressorForm", "Stacking/Voting Regressor"))
        self.checkBox_stv_knnr.setToolTip(_translate("RegressorForm", "K-Nearest Neighbors Regressor"))
        self.checkBox_stv_knnr.setText(_translate("RegressorForm", "KNNR"))
        self.radioButton_voting.setText(_translate("RegressorForm", "Voting"))
        self.checkBox_stv_gbr.setToolTip(_translate("RegressorForm", "Gradient Boosting Regressor"))
        self.checkBox_stv_gbr.setText(_translate("RegressorForm", "GBR"))
        self.checkBox_stack_vote.setText(_translate("RegressorForm", "ON"))
        self.checkBox_stv_mlpr.setToolTip(_translate("RegressorForm", "Multi-layer Perceptron Regressor"))
        self.checkBox_stv_mlpr.setText(_translate("RegressorForm", "MLPR"))
        self.checkBox_stv_gpr.setToolTip(_translate("RegressorForm", "Gaussian Process Regressor"))
        self.checkBox_stv_gpr.setText(_translate("RegressorForm", "GPR"))
        self.checkBox_stv_rfr.setToolTip(_translate("RegressorForm", "Random Forest Regressor"))
        self.checkBox_stv_rfr.setText(_translate("RegressorForm", "RFR"))
        self.checkBox_stv_svr.setToolTip(_translate("RegressorForm", "Support Vector Machines"))
        self.checkBox_stv_svr.setText(_translate("RegressorForm", "SVR"))
        self.radioButton_stacking.setText(_translate("RegressorForm", "Stacking"))
        self.checkBox_stv_dtr.setToolTip(_translate("RegressorForm", "Decision Tree Regressor"))
        self.checkBox_stv_dtr.setText(_translate("RegressorForm", "DTR"))
        self.checkBox_stv_lasso.setToolTip(_translate("RegressorForm", "Lasso"))
        self.checkBox_stv_lasso.setText(_translate("RegressorForm", "LSS"))
        self.checkBox_stv_en.setToolTip(_translate("RegressorForm", "ElasticNet"))
        self.checkBox_stv_en.setText(_translate("RegressorForm", "EN"))
        self.checkBox_stv_etr.setText(_translate("RegressorForm", "ETR"))
        self.checkBox_stv_lr.setToolTip(_translate("RegressorForm", "LinearRegression"))
        self.checkBox_stv_lr.setText(_translate("RegressorForm", "LR"))
        self.checkBox_stv_abr.setText(_translate("RegressorForm", "ABR"))
        self.groupBox_9.setTitle(_translate("RegressorForm", "Cross Validate"))
        self.groupBox_16.setTitle(_translate("RegressorForm", "Bagging"))
        self.groupBox_11.setTitle(_translate("RegressorForm", "PCA"))
        self.checkBox_pca_mle.setText(_translate("RegressorForm", "mle"))
        self.pushButton_calc.setText(_translate("RegressorForm", "CALC"))
        self.pushButton_add_to_lineup.setText(_translate("RegressorForm", "ADD TO LINEUP"))
        self.checkBox_save_model.setText(_translate("RegressorForm", "save"))
        self.groupBox_17.setTitle(_translate("RegressorForm", "PreProcess"))
        self.checkBox_stdscaler_reg.setText(_translate("RegressorForm", "StandardScaler"))
        self.checkBox_robscaler_reg.setText(_translate("RegressorForm", "RobustScaler"))
        self.checkBox_mnmxscaler_reg.setText(_translate("RegressorForm", "MinMaxScaler"))
        self.checkBox_mxabsscaler_reg.setText(_translate("RegressorForm", "MaxAbsScaler"))
        self.pushButton_random_param.setText(_translate("RegressorForm", "RndPrm"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    RegressorForm = QtWidgets.QWidget()
    ui = Ui_RegressorForm()
    ui.setupUi(RegressorForm)
    RegressorForm.show()
    sys.exit(app.exec_())
